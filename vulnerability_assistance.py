# -*- coding: utf-8 -*-
"""
Created on Wed May 10 21:15:32 2023

@author: Rudy
"""

import pandas as pd

correct = {'fips':str,'risk_level':int}

#Reading csvs of risk data created in "risk.py"
flood = pd.read_csv('flood_risk.csv',dtype=correct)
fire = pd.read_csv('fire_risk.csv',dtype=correct)
heat = pd.read_csv('heat_risk.csv',dtype=correct)
wind = pd.read_csv('wind_risk.csv',dtype=correct)

#Filtering to the most "vulnerable" counties ("at risk" is defined in "risk.py")
#What qualifies as most "vulnerable" counties depends on the risk type
#For example, the most flood vulnerable counties are counties with 60% of their properties at risk
#The cutoff point for this was chosen based on limiting the final list of counties in need of assistance
flood = flood[flood['risk_level']>=4]
fire = fire[fire['risk_level']==5]
heat = heat[heat['risk_level']==5]
wind = wind[wind['risk_level']==5]

#Reading csv of expenditure data created in "expenditure.py"
exp = pd.read_csv('expenditures.csv',dtype={'FIPS_Combined':str})

#Creating a function that finds vulnerable counties without available expenditure data and exporting as csv
#These counties should be further investigated for their expenditures
def v_miss(risktype,name,cutoff):
    v = risktype.merge(exp,how='outer',left_on=['fips'],right_on=['FIPS_Combined'],validate='1:1',indicator=True)
    v_missing = v[v['_merge']=='left_only']
    v_missing = v_missing[['fips','name','count_property',f'>{cutoff}scores_sum','%_at_risk']]
    v_missing.to_csv(f'{name}_vulnerable_missing.csv',index=False)
    return v_missing

#Creating a function that finds vulnerable counties most in need of financial assistance and exporting as csv
def v(risktype,name,cutoff,quintile):
    v = risktype.merge(exp,how='outer',left_on=['fips'],right_on=['FIPS_Combined'],validate='1:1',indicator=True)
    v = v[v['_merge']=='both']
    v = v[v['expenditure_level']<=quintile]
    v = v[['fips','name','count_property',f'>{cutoff}scores_sum','%_at_risk','Per_capita_exp','exp_percentile']]
    v.to_csv(f'{name}_assistance.csv',index=False)

#Calling the functions created previously for each type of risk
#The last parameter indicates the quintile in determining what qualifies as "low" expenditure per capita
#For example, for flooding, "low" expenditure counties are counties in the 2 lowest quintiles in terms of expenditure per capita
#Like the vulnerability cutoff point, the cutoff point for this was chosen based on limiting the final list of counties in need of assistance
all_risk = [(flood,'flood','1',2),(fire,'fire','2',1),(heat,'heat','1',1),(wind,'wind','2',1)]

for a,b,c,d in all_risk:
    v_miss(a,b,c)
    v(a,b,c,d)